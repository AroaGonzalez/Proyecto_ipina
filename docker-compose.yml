services:
  node-service:
    build: ./backend/node
    container_name: node-service
    ports:
      - "5000:5000"
    volumes:
      - ./backend/node:/app:ro
    depends_on:
      - mongo
    networks:
      - app-network

  python-service:
    build: ./backend/python
    container_name: python-service
    ports:
      - "8000:8000"
    volumes:
      - ./backend/python:/app:ro
    depends_on:
      - mysql
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./database/mongo:/docker-entrypoint-initdb.d
    networks:
      - app-network
    environment:
      MONGO_INITDB_DATABASE: tienda
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword

  mysql:
    image: mysql:latest
    container_name: mysqldb
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: tienda


  api-gateway:
    build: ./gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    volumes:
      - ./gateway:/app:ro
    depends_on:
      - node-service
      - python-service
    networks:
      - app-network

volumes:
  mongo-data:
  mysql-data:

networks:
  app-network:
